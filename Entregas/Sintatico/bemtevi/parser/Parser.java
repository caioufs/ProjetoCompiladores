/* This file was generated by SableCC (http://www.sablecc.org/). */

package bemtevi.parser;

import bemtevi.lexer.*;
import bemtevi.node.*;
import bemtevi.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprogramaprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AAprogramaprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list, false);
            }
            break;
            case 2: /* reduce AFamiliaOpcionalFamiliaOpcional */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce AAfamiliafamilia1Familia */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce AAfamiliafamilia2Familia */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list, false);
            }
            break;
            case 5: /* reduce ARelacaoRelacao */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list, false);
            }
            break;
            case 6: /* reduce ADefMoldeDefMolde */
            {
                ArrayList<Object> list = new6();
                push(goTo(4), list, false);
            }
            break;
            case 7: /* reduce ADecConsAttrAux */
            {
                ArrayList<Object> list = new7();
                push(goTo(5), list, false);
            }
            break;
            case 8: /* reduce ADecObjAttrAux */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce AAatributosatributos1Atributos */
            {
                ArrayList<Object> list = new9();
                push(goTo(6), list, false);
            }
            break;
            case 10: /* reduce AAatributosatributos2Atributos */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list, false);
            }
            break;
            case 11: /* reduce AAmetodosmetodos1Metodos */
            {
                ArrayList<Object> list = new11();
                push(goTo(7), list, false);
            }
            break;
            case 12: /* reduce AAmetodosmetodos2Metodos */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list, false);
            }
            break;
            case 13: /* reduce ADecConsDecCons */
            {
                ArrayList<Object> list = new13();
                push(goTo(8), list, false);
            }
            break;
            case 14: /* reduce ADecObjDecObj */
            {
                ArrayList<Object> list = new14();
                push(goTo(9), list, false);
            }
            break;
            case 15: /* reduce ABoolTipoPrimitivo */
            {
                ArrayList<Object> list = new15();
                push(goTo(10), list, false);
            }
            break;
            case 16: /* reduce ANumeroTipoPrimitivo */
            {
                ArrayList<Object> list = new16();
                push(goTo(10), list, false);
            }
            break;
            case 17: /* reduce ATextoTipoPrimitivo */
            {
                ArrayList<Object> list = new17();
                push(goTo(10), list, false);
            }
            break;
            case 18: /* reduce ATipoMoldeTipoMolde */
            {
                ArrayList<Object> list = new18();
                push(goTo(11), list, false);
            }
            break;
            case 19: /* reduce ATipoMoldeTipo */
            {
                ArrayList<Object> list = new19();
                push(goTo(12), list, false);
            }
            break;
            case 20: /* reduce ATipoPrimitivoTipo */
            {
                ArrayList<Object> list = new20();
                push(goTo(12), list, false);
            }
            break;
            case 21: /* reduce AAdecfuncaodecfuncao1DecFuncao */
            {
                ArrayList<Object> list = new21();
                push(goTo(13), list, false);
            }
            break;
            case 22: /* reduce AAdecfuncaodecfuncao2DecFuncao */
            {
                ArrayList<Object> list = new22();
                push(goTo(13), list, false);
            }
            break;
            case 23: /* reduce AAdecfuncaosemblocodecfuncao1DecFuncao */
            {
                ArrayList<Object> list = new23();
                push(goTo(13), list, false);
            }
            break;
            case 24: /* reduce AAdecfuncaosemblocodecfuncao2DecFuncao */
            {
                ArrayList<Object> list = new24();
                push(goTo(13), list, false);
            }
            break;
            case 25: /* reduce AMaisParametroMaisParametro */
            {
                ArrayList<Object> list = new25();
                push(goTo(14), list, false);
            }
            break;
            case 26: /* reduce AAparametrosparametros1Parametros */
            {
                ArrayList<Object> list = new26();
                push(goTo(15), list, false);
            }
            break;
            case 27: /* reduce AAparametrosparametros2Parametros */
            {
                ArrayList<Object> list = new27();
                push(goTo(15), list, false);
            }
            break;
            case 28: /* reduce AAparametrosparametros3Parametros */
            {
                ArrayList<Object> list = new28();
                push(goTo(15), list, false);
            }
            break;
            case 29: /* reduce AAparametrosparametros4Parametros */
            {
                ArrayList<Object> list = new29();
                push(goTo(15), list, false);
            }
            break;
            case 30: /* reduce AParametroParametro */
            {
                ArrayList<Object> list = new30();
                push(goTo(16), list, false);
            }
            break;
            case 31: /* reduce AAssinaturaParametro */
            {
                ArrayList<Object> list = new31();
                push(goTo(16), list, false);
            }
            break;
            case 32: /* reduce AAssinaturaAssinatura */
            {
                ArrayList<Object> list = new32();
                push(goTo(17), list, false);
            }
            break;
            case 33: /* reduce AMaisParametrosAssinaturaMaisParametrosAssinatura */
            {
                ArrayList<Object> list = new33();
                push(goTo(18), list, false);
            }
            break;
            case 34: /* reduce AAparametrosassinaturaparametrosassinatura1ParametrosAssinatura */
            {
                ArrayList<Object> list = new34();
                push(goTo(19), list, false);
            }
            break;
            case 35: /* reduce AAparametrosassinaturaparametrosassinatura2ParametrosAssinatura */
            {
                ArrayList<Object> list = new35();
                push(goTo(19), list, false);
            }
            break;
            case 36: /* reduce AAparametrosassinaturaparametrosassinatura3ParametrosAssinatura */
            {
                ArrayList<Object> list = new36();
                push(goTo(19), list, false);
            }
            break;
            case 37: /* reduce AAparametrosassinaturaparametrosassinatura4ParametrosAssinatura */
            {
                ArrayList<Object> list = new37();
                push(goTo(19), list, false);
            }
            break;
            case 38: /* reduce ATipoParametroAssinatura */
            {
                ArrayList<Object> list = new38();
                push(goTo(20), list, false);
            }
            break;
            case 39: /* reduce AAssinaturaParametroAssinatura */
            {
                ArrayList<Object> list = new39();
                push(goTo(20), list, false);
            }
            break;
            case 40: /* reduce ADecConsConteudoBloco */
            {
                ArrayList<Object> list = new40();
                push(goTo(21), list, false);
            }
            break;
            case 41: /* reduce ADecObjConteudoBloco */
            {
                ArrayList<Object> list = new41();
                push(goTo(21), list, false);
            }
            break;
            case 42: /* reduce ADefinicaoConteudoBloco */
            {
                ArrayList<Object> list = new42();
                push(goTo(21), list, false);
            }
            break;
            case 43: /* reduce AAblocobloco1Bloco */
            {
                ArrayList<Object> list = new43();
                push(goTo(22), list, false);
            }
            break;
            case 44: /* reduce AAblocobloco2Bloco */
            {
                ArrayList<Object> list = new44();
                push(goTo(22), list, false);
            }
            break;
            case 45: /* reduce AIdConteudoDefinicao */
            {
                ArrayList<Object> list = new45();
                push(goTo(23), list, false);
            }
            break;
            case 46: /* reduce AAtributoConteudoDefinicao */
            {
                ArrayList<Object> list = new46();
                push(goTo(23), list, false);
            }
            break;
            case 47: /* reduce ADefinicaoDefinicao */
            {
                ArrayList<Object> list = new47();
                push(goTo(24), list, false);
            }
            break;
            case 48: /* reduce AMaisAtributoMaisAtributo */
            {
                ArrayList<Object> list = new48();
                push(goTo(25), list, false);
            }
            break;
            case 49: /* reduce AAtributoAtributo */
            {
                ArrayList<Object> list = new49();
                push(goTo(26), list, false);
            }
            break;
            case 50: /* reduce AFatorExp */
            {
                ArrayList<Object> list = new50();
                push(goTo(27), list, false);
            }
            break;
            case 51: /* reduce ASomaExp */
            {
                ArrayList<Object> list = new51();
                push(goTo(27), list, false);
            }
            break;
            case 52: /* reduce AMenosExp */
            {
                ArrayList<Object> list = new52();
                push(goTo(27), list, false);
            }
            break;
            case 53: /* reduce ATermoFator */
            {
                ArrayList<Object> list = new53();
                push(goTo(28), list, false);
            }
            break;
            case 54: /* reduce AMultFator */
            {
                ArrayList<Object> list = new54();
                push(goTo(28), list, false);
            }
            break;
            case 55: /* reduce ADivFator */
            {
                ArrayList<Object> list = new55();
                push(goTo(28), list, false);
            }
            break;
            case 56: /* reduce AModFator */
            {
                ArrayList<Object> list = new56();
                push(goTo(28), list, false);
            }
            break;
            case 57: /* reduce ANumerosTermo */
            {
                ArrayList<Object> list = new57();
                push(goTo(29), list, false);
            }
            break;
            case 58: /* reduce ATermosTermo */
            {
                ArrayList<Object> list = new58();
                push(goTo(29), list, false);
            }
            break;
            case 59: /* reduce ATerminal$DefMolde */
            {
                ArrayList<Object> list = new59();
                push(goTo(30), list, true);
            }
            break;
            case 60: /* reduce ANonTerminal$DefMolde */
            {
                ArrayList<Object> list = new60();
                push(goTo(30), list, true);
            }
            break;
            case 61: /* reduce ATerminal$FamiliaOpcional */
            {
                ArrayList<Object> list = new61();
                push(goTo(31), list, true);
            }
            break;
            case 62: /* reduce ANonTerminal$FamiliaOpcional */
            {
                ArrayList<Object> list = new62();
                push(goTo(31), list, true);
            }
            break;
            case 63: /* reduce ATerminal$AttrAux */
            {
                ArrayList<Object> list = new63();
                push(goTo(32), list, true);
            }
            break;
            case 64: /* reduce ANonTerminal$AttrAux */
            {
                ArrayList<Object> list = new64();
                push(goTo(32), list, true);
            }
            break;
            case 65: /* reduce ATerminal$DecFuncao */
            {
                ArrayList<Object> list = new65();
                push(goTo(33), list, true);
            }
            break;
            case 66: /* reduce ANonTerminal$DecFuncao */
            {
                ArrayList<Object> list = new66();
                push(goTo(33), list, true);
            }
            break;
            case 67: /* reduce ATerminal$MaisParametro */
            {
                ArrayList<Object> list = new67();
                push(goTo(34), list, true);
            }
            break;
            case 68: /* reduce ANonTerminal$MaisParametro */
            {
                ArrayList<Object> list = new68();
                push(goTo(34), list, true);
            }
            break;
            case 69: /* reduce ATerminal$MaisParametrosAssinatura */
            {
                ArrayList<Object> list = new69();
                push(goTo(35), list, true);
            }
            break;
            case 70: /* reduce ANonTerminal$MaisParametrosAssinatura */
            {
                ArrayList<Object> list = new70();
                push(goTo(35), list, true);
            }
            break;
            case 71: /* reduce ATerminal$ConteudoBloco */
            {
                ArrayList<Object> list = new71();
                push(goTo(36), list, true);
            }
            break;
            case 72: /* reduce ANonTerminal$ConteudoBloco */
            {
                ArrayList<Object> list = new72();
                push(goTo(36), list, true);
            }
            break;
            case 73: /* reduce ATerminal$MaisAtributo */
            {
                ArrayList<Object> list = new73();
                push(goTo(37), list, true);
            }
            break;
            case 74: /* reduce ANonTerminal$MaisAtributo */
            {
                ArrayList<Object> list = new74();
                push(goTo(37), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprogramaprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pprogramaNode1 = new AProgramaPrograma(null, listNode4);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprogramaprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PFamilia pfamiliaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pfamiliaNode2 = (PFamilia)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pprogramaNode1 = new AProgramaPrograma(pfamiliaNode2, listNode4);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AFamiliaOpcionalFamiliaOpcional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFamiliaOpcional pfamiliaopcionalNode1;
        {
            // Block
        TPontoVirgula tpontovirgulaNode2;
        PRelacao prelacaoNode3;
        tpontovirgulaNode2 = (TPontoVirgula)nodeArrayList1.get(0);
        prelacaoNode3 = (PRelacao)nodeArrayList2.get(0);

        pfamiliaopcionalNode1 = new AFamiliaOpcionalFamiliaOpcional(tpontovirgulaNode2, prelacaoNode3);
        }
	nodeList.add(pfamiliaopcionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAfamiliafamilia1Familia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFamilia pfamiliaNode1;
        {
            // Block
        PRelacao prelacaoNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        TPonto tpontoNode4;
        prelacaoNode2 = (PRelacao)nodeArrayList1.get(0);
        {
            // Block
        }
        tpontoNode4 = (TPonto)nodeArrayList2.get(0);

        pfamiliaNode1 = new AFamiliaFamilia(prelacaoNode2, listNode3, tpontoNode4);
        }
	nodeList.add(pfamiliaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AAfamiliafamilia2Familia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFamilia pfamiliaNode1;
        {
            // Block
        PRelacao prelacaoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TPonto tpontoNode5;
        prelacaoNode2 = (PRelacao)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tpontoNode5 = (TPonto)nodeArrayList3.get(0);

        pfamiliaNode1 = new AFamiliaFamilia(prelacaoNode2, listNode4, tpontoNode5);
        }
	nodeList.add(pfamiliaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ARelacaoRelacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelacao prelacaoNode1;
        {
            // Block
        TMolde tmoldeNode2;
        TIdMolde tidmoldeNode3;
        TSe tseNode4;
        TPassa tpassaNode5;
        TPor tporNode6;
        TIdMolde tidmoldeNode7;
        tmoldeNode2 = (TMolde)nodeArrayList1.get(0);
        tidmoldeNode3 = (TIdMolde)nodeArrayList2.get(0);
        tseNode4 = (TSe)nodeArrayList3.get(0);
        tpassaNode5 = (TPassa)nodeArrayList4.get(0);
        tporNode6 = (TPor)nodeArrayList5.get(0);
        tidmoldeNode7 = (TIdMolde)nodeArrayList6.get(0);

        prelacaoNode1 = new ARelacaoRelacao(tmoldeNode2, tidmoldeNode3, tseNode4, tpassaNode5, tporNode6, tidmoldeNode7);
        }
	nodeList.add(prelacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ADefMoldeDefMolde */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefMolde pdefmoldeNode1;
        {
            // Block
        TMolde tmoldeNode2;
        TIdMolde tidmoldeNode3;
        TContem tcontemNode4;
        PAtributos patributosNode5;
        PMetodos pmetodosNode6;
        TFim tfimNode7;
        tmoldeNode2 = (TMolde)nodeArrayList1.get(0);
        tidmoldeNode3 = (TIdMolde)nodeArrayList2.get(0);
        tcontemNode4 = (TContem)nodeArrayList3.get(0);
        patributosNode5 = (PAtributos)nodeArrayList4.get(0);
        pmetodosNode6 = (PMetodos)nodeArrayList5.get(0);
        tfimNode7 = (TFim)nodeArrayList6.get(0);

        pdefmoldeNode1 = new ADefMoldeDefMolde(tmoldeNode2, tidmoldeNode3, tcontemNode4, patributosNode5, pmetodosNode6, tfimNode7);
        }
	nodeList.add(pdefmoldeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADecConsAttrAux */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAttrAux pattrauxNode1;
        {
            // Block
        PDecCons pdecconsNode2;
        pdecconsNode2 = (PDecCons)nodeArrayList1.get(0);

        pattrauxNode1 = new ADecConsAttrAux(pdecconsNode2);
        }
	nodeList.add(pattrauxNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ADecObjAttrAux */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAttrAux pattrauxNode1;
        {
            // Block
        PDecObj pdecobjNode2;
        pdecobjNode2 = (PDecObj)nodeArrayList1.get(0);

        pattrauxNode1 = new ADecObjAttrAux(pdecobjNode2);
        }
	nodeList.add(pattrauxNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AAatributosatributos1Atributos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PAtributos patributosNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        }

        patributosNode1 = new AAtributosAtributos(listNode2);
        }
	nodeList.add(patributosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AAatributosatributos2Atributos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtributos patributosNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        patributosNode1 = new AAtributosAtributos(listNode3);
        }
	nodeList.add(patributosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AAmetodosmetodos1Metodos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PMetodos pmetodosNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        }

        pmetodosNode1 = new AMetodosMetodos(listNode2);
        }
	nodeList.add(pmetodosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AAmetodosmetodos2Metodos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMetodos pmetodosNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pmetodosNode1 = new AMetodosMetodos(listNode3);
        }
	nodeList.add(pmetodosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ADecConsDecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecCons pdecconsNode1;
        {
            // Block
        TConstante tconstanteNode2;
        TDoisPontos tdoispontosNode3;
        PTipoPrimitivo ptipoprimitivoNode4;
        TId tidNode5;
        TPontoVirgula tpontovirgulaNode6;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoprimitivoNode4 = (PTipoPrimitivo)nodeArrayList3.get(0);
        tidNode5 = (TId)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        pdecconsNode1 = new ADecConsDecCons(tconstanteNode2, tdoispontosNode3, ptipoprimitivoNode4, tidNode5, tpontovirgulaNode6);
        }
	nodeList.add(pdecconsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ADecObjDecObj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecObj pdecobjNode1;
        {
            // Block
        TObjeto tobjetoNode2;
        TDoisPontos tdoispontosNode3;
        PTipoMolde ptipomoldeNode4;
        TId tidNode5;
        TPontoVirgula tpontovirgulaNode6;
        tobjetoNode2 = (TObjeto)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        ptipomoldeNode4 = (PTipoMolde)nodeArrayList3.get(0);
        tidNode5 = (TId)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        pdecobjNode1 = new ADecObjDecObj(tobjetoNode2, tdoispontosNode3, ptipomoldeNode4, tidNode5, tpontovirgulaNode6);
        }
	nodeList.add(pdecobjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ABoolTipoPrimitivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoPrimitivo ptipoprimitivoNode1;
        {
            // Block
        TBool tboolNode2;
        tboolNode2 = (TBool)nodeArrayList1.get(0);

        ptipoprimitivoNode1 = new ABoolTipoPrimitivo(tboolNode2);
        }
	nodeList.add(ptipoprimitivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce ANumeroTipoPrimitivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoPrimitivo ptipoprimitivoNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        ptipoprimitivoNode1 = new ANumeroTipoPrimitivo(tnumeroNode2);
        }
	nodeList.add(ptipoprimitivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ATextoTipoPrimitivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoPrimitivo ptipoprimitivoNode1;
        {
            // Block
        TTexto ttextoNode2;
        ttextoNode2 = (TTexto)nodeArrayList1.get(0);

        ptipoprimitivoNode1 = new ATextoTipoPrimitivo(ttextoNode2);
        }
	nodeList.add(ptipoprimitivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce ATipoMoldeTipoMolde */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoMolde ptipomoldeNode1;
        {
            // Block
        TIdMolde tidmoldeNode2;
        tidmoldeNode2 = (TIdMolde)nodeArrayList1.get(0);

        ptipomoldeNode1 = new ATipoMoldeTipoMolde(tidmoldeNode2);
        }
	nodeList.add(ptipomoldeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ATipoMoldeTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoMolde ptipomoldeNode2;
        ptipomoldeNode2 = (PTipoMolde)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoMoldeTipo(ptipomoldeNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ATipoPrimitivoTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoPrimitivo ptipoprimitivoNode2;
        ptipoprimitivoNode2 = (PTipoPrimitivo)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoPrimitivoTipo(ptipoprimitivoNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAdecfuncaodecfuncao1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TFuncao tfuncaoNode3;
        TDoisPontos tdoispontosNode4;
        PTipo ptipoNode5;
        TId tidNode6;
        TParEsq tparesqNode7;
        PParametros pparametrosNode8;
        TParDir tpardirNode9;
        PBloco pblocoNode10;
        tfuncaoNode3 = (TFuncao)nodeArrayList1.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoNode5 = (PTipo)nodeArrayList3.get(0);
        tidNode6 = (TId)nodeArrayList4.get(0);
        tparesqNode7 = (TParEsq)nodeArrayList5.get(0);
        pparametrosNode8 = (PParametros)nodeArrayList6.get(0);
        tpardirNode9 = (TParDir)nodeArrayList7.get(0);
        pblocoNode10 = (PBloco)nodeArrayList8.get(0);

        pdecfuncaoNode1 = new ADecFuncaoDecFuncao(null, tfuncaoNode3, tdoispontosNode4, ptipoNode5, tidNode6, tparesqNode7, pparametrosNode8, tpardirNode9, pblocoNode10);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AAdecfuncaodecfuncao2DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TDoisMaior tdoismaiorNode2;
        TFuncao tfuncaoNode3;
        TDoisPontos tdoispontosNode4;
        PTipo ptipoNode5;
        TId tidNode6;
        TParEsq tparesqNode7;
        PParametros pparametrosNode8;
        TParDir tpardirNode9;
        PBloco pblocoNode10;
        tdoismaiorNode2 = (TDoisMaior)nodeArrayList1.get(0);
        tfuncaoNode3 = (TFuncao)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        ptipoNode5 = (PTipo)nodeArrayList4.get(0);
        tidNode6 = (TId)nodeArrayList5.get(0);
        tparesqNode7 = (TParEsq)nodeArrayList6.get(0);
        pparametrosNode8 = (PParametros)nodeArrayList7.get(0);
        tpardirNode9 = (TParDir)nodeArrayList8.get(0);
        pblocoNode10 = (PBloco)nodeArrayList9.get(0);

        pdecfuncaoNode1 = new ADecFuncaoDecFuncao(tdoismaiorNode2, tfuncaoNode3, tdoispontosNode4, ptipoNode5, tidNode6, tparesqNode7, pparametrosNode8, tpardirNode9, pblocoNode10);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAdecfuncaosemblocodecfuncao1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TFuncao tfuncaoNode3;
        TDoisPontos tdoispontosNode4;
        PTipo ptipoNode5;
        TId tidNode6;
        TParEsq tparesqNode7;
        PParametros pparametrosNode8;
        TParDir tpardirNode9;
        TPontoVirgula tpontovirgulaNode10;
        tfuncaoNode3 = (TFuncao)nodeArrayList1.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoNode5 = (PTipo)nodeArrayList3.get(0);
        tidNode6 = (TId)nodeArrayList4.get(0);
        tparesqNode7 = (TParEsq)nodeArrayList5.get(0);
        pparametrosNode8 = (PParametros)nodeArrayList6.get(0);
        tpardirNode9 = (TParDir)nodeArrayList7.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList8.get(0);

        pdecfuncaoNode1 = new ADecFuncaoSemBlocoDecFuncao(null, tfuncaoNode3, tdoispontosNode4, ptipoNode5, tidNode6, tparesqNode7, pparametrosNode8, tpardirNode9, tpontovirgulaNode10);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAdecfuncaosemblocodecfuncao2DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TDoisMaior tdoismaiorNode2;
        TFuncao tfuncaoNode3;
        TDoisPontos tdoispontosNode4;
        PTipo ptipoNode5;
        TId tidNode6;
        TParEsq tparesqNode7;
        PParametros pparametrosNode8;
        TParDir tpardirNode9;
        TPontoVirgula tpontovirgulaNode10;
        tdoismaiorNode2 = (TDoisMaior)nodeArrayList1.get(0);
        tfuncaoNode3 = (TFuncao)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        ptipoNode5 = (PTipo)nodeArrayList4.get(0);
        tidNode6 = (TId)nodeArrayList5.get(0);
        tparesqNode7 = (TParEsq)nodeArrayList6.get(0);
        pparametrosNode8 = (PParametros)nodeArrayList7.get(0);
        tpardirNode9 = (TParDir)nodeArrayList8.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList9.get(0);

        pdecfuncaoNode1 = new ADecFuncaoSemBlocoDecFuncao(tdoismaiorNode2, tfuncaoNode3, tdoispontosNode4, ptipoNode5, tidNode6, tparesqNode7, pparametrosNode8, tpardirNode9, tpontovirgulaNode10);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AMaisParametroMaisParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMaisParametro pmaisparametroNode1;
        {
            // Block
        TPipe tpipeNode2;
        PParametro pparametroNode3;
        tpipeNode2 = (TPipe)nodeArrayList1.get(0);
        pparametroNode3 = (PParametro)nodeArrayList2.get(0);

        pmaisparametroNode1 = new AMaisParametroMaisParametro(tpipeNode2, pparametroNode3);
        }
	nodeList.add(pmaisparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAparametrosparametros1Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametros pparametrosNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        }

        pparametrosNode1 = new AParametrosParametros(null, listNode3);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAparametrosparametros2Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        {
            // Block
        }

        pparametrosNode1 = new AParametrosParametros(pparametroNode2, listNode3);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAparametrosparametros3Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparametrosNode1 = new AParametrosParametros(null, listNode4);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAparametrosparametros4Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparametrosNode1 = new AParametrosParametros(pparametroNode2, listNode4);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AParametroParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PTipo ptipoNode2;
        TId tidNode3;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);

        pparametroNode1 = new AParametroParametro(ptipoNode2, tidNode3);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AAssinaturaParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PAssinatura passinaturaNode2;
        passinaturaNode2 = (PAssinatura)nodeArrayList1.get(0);

        pparametroNode1 = new AAssinaturaParametro(passinaturaNode2);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AAssinaturaAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAssinatura passinaturaNode1;
        {
            // Block
        PTipo ptipoNode2;
        TId tidNode3;
        TParEsq tparesqNode4;
        PParametrosAssinatura pparametrosassinaturaNode5;
        TParDir tpardirNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tparesqNode4 = (TParEsq)nodeArrayList3.get(0);
        pparametrosassinaturaNode5 = (PParametrosAssinatura)nodeArrayList4.get(0);
        tpardirNode6 = (TParDir)nodeArrayList5.get(0);

        passinaturaNode1 = new AAssinaturaAssinatura(ptipoNode2, tidNode3, tparesqNode4, pparametrosassinaturaNode5, tpardirNode6);
        }
	nodeList.add(passinaturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AMaisParametrosAssinaturaMaisParametrosAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMaisParametrosAssinatura pmaisparametrosassinaturaNode1;
        {
            // Block
        TPipe tpipeNode2;
        PParametroAssinatura pparametroassinaturaNode3;
        tpipeNode2 = (TPipe)nodeArrayList1.get(0);
        pparametroassinaturaNode3 = (PParametroAssinatura)nodeArrayList2.get(0);

        pmaisparametrosassinaturaNode1 = new AMaisParametrosAssinaturaMaisParametrosAssinatura(tpipeNode2, pparametroassinaturaNode3);
        }
	nodeList.add(pmaisparametrosassinaturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AAparametrosassinaturaparametrosassinatura1ParametrosAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametrosAssinatura pparametrosassinaturaNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        }

        pparametrosassinaturaNode1 = new AParametrosAssinaturaParametrosAssinatura(null, listNode3);
        }
	nodeList.add(pparametrosassinaturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AAparametrosassinaturaparametrosassinatura2ParametrosAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametrosAssinatura pparametrosassinaturaNode1;
        {
            // Block
        PParametroAssinatura pparametroassinaturaNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pparametroassinaturaNode2 = (PParametroAssinatura)nodeArrayList1.get(0);
        {
            // Block
        }

        pparametrosassinaturaNode1 = new AParametrosAssinaturaParametrosAssinatura(pparametroassinaturaNode2, listNode3);
        }
	nodeList.add(pparametrosassinaturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AAparametrosassinaturaparametrosassinatura3ParametrosAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametrosAssinatura pparametrosassinaturaNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparametrosassinaturaNode1 = new AParametrosAssinaturaParametrosAssinatura(null, listNode4);
        }
	nodeList.add(pparametrosassinaturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AAparametrosassinaturaparametrosassinatura4ParametrosAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametrosAssinatura pparametrosassinaturaNode1;
        {
            // Block
        PParametroAssinatura pparametroassinaturaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pparametroassinaturaNode2 = (PParametroAssinatura)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparametrosassinaturaNode1 = new AParametrosAssinaturaParametrosAssinatura(pparametroassinaturaNode2, listNode4);
        }
	nodeList.add(pparametrosassinaturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ATipoParametroAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametroAssinatura pparametroassinaturaNode1;
        {
            // Block
        PTipo ptipoNode2;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);

        pparametroassinaturaNode1 = new ATipoParametroAssinatura(ptipoNode2);
        }
	nodeList.add(pparametroassinaturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAssinaturaParametroAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametroAssinatura pparametroassinaturaNode1;
        {
            // Block
        PAssinatura passinaturaNode2;
        passinaturaNode2 = (PAssinatura)nodeArrayList1.get(0);

        pparametroassinaturaNode1 = new AAssinaturaParametroAssinatura(passinaturaNode2);
        }
	nodeList.add(pparametroassinaturaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ADecConsConteudoBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConteudoBloco pconteudoblocoNode1;
        {
            // Block
        PDecCons pdecconsNode2;
        pdecconsNode2 = (PDecCons)nodeArrayList1.get(0);

        pconteudoblocoNode1 = new ADecConsConteudoBloco(pdecconsNode2);
        }
	nodeList.add(pconteudoblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ADecObjConteudoBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConteudoBloco pconteudoblocoNode1;
        {
            // Block
        PDecObj pdecobjNode2;
        pdecobjNode2 = (PDecObj)nodeArrayList1.get(0);

        pconteudoblocoNode1 = new ADecObjConteudoBloco(pdecobjNode2);
        }
	nodeList.add(pconteudoblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ADefinicaoConteudoBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConteudoBloco pconteudoblocoNode1;
        {
            // Block
        PDefinicao pdefinicaoNode2;
        pdefinicaoNode2 = (PDefinicao)nodeArrayList1.get(0);

        pconteudoblocoNode1 = new ADefinicaoConteudoBloco(pdefinicaoNode2);
        }
	nodeList.add(pconteudoblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AAblocobloco1Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TAbreBloco tabreblocoNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExp pexpNode4;
        TFechaBloco tfechablocoNode5;
        tabreblocoNode2 = (TAbreBloco)nodeArrayList1.get(0);
        {
            // Block
        }
        pexpNode4 = (PExp)nodeArrayList2.get(0);
        tfechablocoNode5 = (TFechaBloco)nodeArrayList3.get(0);

        pblocoNode1 = new ABlocoBloco(tabreblocoNode2, listNode3, pexpNode4, tfechablocoNode5);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AAblocobloco2Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TAbreBloco tabreblocoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PExp pexpNode5;
        TFechaBloco tfechablocoNode6;
        tabreblocoNode2 = (TAbreBloco)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pexpNode5 = (PExp)nodeArrayList3.get(0);
        tfechablocoNode6 = (TFechaBloco)nodeArrayList4.get(0);

        pblocoNode1 = new ABlocoBloco(tabreblocoNode2, listNode4, pexpNode5, tfechablocoNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AIdConteudoDefinicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConteudoDefinicao pconteudodefinicaoNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pconteudodefinicaoNode1 = new AIdConteudoDefinicao(tidNode2);
        }
	nodeList.add(pconteudodefinicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AAtributoConteudoDefinicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConteudoDefinicao pconteudodefinicaoNode1;
        {
            // Block
        PAtributo patributoNode2;
        patributoNode2 = (PAtributo)nodeArrayList1.get(0);

        pconteudodefinicaoNode1 = new AAtributoConteudoDefinicao(patributoNode2);
        }
	nodeList.add(pconteudodefinicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce ADefinicaoDefinicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefinicao pdefinicaoNode1;
        {
            // Block
        PConteudoDefinicao pconteudodefinicaoNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoVirgula tpontovirgulaNode5;
        pconteudodefinicaoNode2 = (PConteudoDefinicao)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdefinicaoNode1 = new ADefinicaoDefinicao(pconteudodefinicaoNode2, tatribuicaoNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdefinicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AMaisAtributoMaisAtributo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMaisAtributo pmaisatributoNode1;
        {
            // Block
        TPonto tpontoNode2;
        TId tidNode3;
        tpontoNode2 = (TPonto)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);

        pmaisatributoNode1 = new AMaisAtributoMaisAtributo(tpontoNode2, tidNode3);
        }
	nodeList.add(pmaisatributoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AAtributoAtributo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtributo patributoNode1;
        {
            // Block
        TId tidNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        patributoNode1 = new AAtributoAtributo(tidNode2, listNode4);
        }
	nodeList.add(patributoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AFatorExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        pexpNode1 = new AFatorExp(pfatorNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ASomaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TSoma tsomaNode3;
        PFator pfatorNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tsomaNode3 = (TSoma)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        pexpNode1 = new ASomaExp(pexpNode2, tsomaNode3, pfatorNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AMenosExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TMenos tmenosNode3;
        PFator pfatorNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        pexpNode1 = new AMenosExp(pexpNode2, tmenosNode3, pfatorNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce ATermoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pfatorNode1 = new ATermoFator(ptermoNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AMultFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TMult tmultNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new AMultFator(pfatorNode2, tmultNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce ADivFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TDiv tdivNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new ADivFator(pfatorNode2, tdivNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AModFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TMod tmodNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tmodNode3 = (TMod)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new AModFator(pfatorNode2, tmodNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce ANumerosTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TNumeros tnumerosNode2;
        tnumerosNode2 = (TNumeros)nodeArrayList1.get(0);

        ptermoNode1 = new ANumerosTermo(tnumerosNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ATermosTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TParEsq tparesqNode2;
        PExp pexpNode3;
        TParDir tpardirNode4;
        tparesqNode2 = (TParEsq)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tpardirNode4 = (TParDir)nodeArrayList3.get(0);

        ptermoNode1 = new ATermosTermo(tparesqNode2, pexpNode3, tpardirNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce ATerminal$DefMolde */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDefMolde pdefmoldeNode1;
        pdefmoldeNode1 = (PDefMolde)nodeArrayList1.get(0);
	if(pdefmoldeNode1 != null)
	{
	  listNode2.add(pdefmoldeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ANonTerminal$DefMolde */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDefMolde pdefmoldeNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdefmoldeNode2 = (PDefMolde)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdefmoldeNode2 != null)
	{
	  listNode3.add(pdefmoldeNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce ATerminal$FamiliaOpcional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PFamiliaOpcional pfamiliaopcionalNode1;
        pfamiliaopcionalNode1 = (PFamiliaOpcional)nodeArrayList1.get(0);
	if(pfamiliaopcionalNode1 != null)
	{
	  listNode2.add(pfamiliaopcionalNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ANonTerminal$FamiliaOpcional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PFamiliaOpcional pfamiliaopcionalNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfamiliaopcionalNode2 = (PFamiliaOpcional)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfamiliaopcionalNode2 != null)
	{
	  listNode3.add(pfamiliaopcionalNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ATerminal$AttrAux */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PAttrAux pattrauxNode1;
        pattrauxNode1 = (PAttrAux)nodeArrayList1.get(0);
	if(pattrauxNode1 != null)
	{
	  listNode2.add(pattrauxNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ANonTerminal$AttrAux */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PAttrAux pattrauxNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pattrauxNode2 = (PAttrAux)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pattrauxNode2 != null)
	{
	  listNode3.add(pattrauxNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ATerminal$DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecFuncao pdecfuncaoNode1;
        pdecfuncaoNode1 = (PDecFuncao)nodeArrayList1.get(0);
	if(pdecfuncaoNode1 != null)
	{
	  listNode2.add(pdecfuncaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ANonTerminal$DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecFuncao pdecfuncaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecfuncaoNode2 = (PDecFuncao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecfuncaoNode2 != null)
	{
	  listNode3.add(pdecfuncaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ATerminal$MaisParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PMaisParametro pmaisparametroNode1;
        pmaisparametroNode1 = (PMaisParametro)nodeArrayList1.get(0);
	if(pmaisparametroNode1 != null)
	{
	  listNode2.add(pmaisparametroNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ANonTerminal$MaisParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PMaisParametro pmaisparametroNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmaisparametroNode2 = (PMaisParametro)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmaisparametroNode2 != null)
	{
	  listNode3.add(pmaisparametroNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ATerminal$MaisParametrosAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PMaisParametrosAssinatura pmaisparametrosassinaturaNode1;
        pmaisparametrosassinaturaNode1 = (PMaisParametrosAssinatura)nodeArrayList1.get(0);
	if(pmaisparametrosassinaturaNode1 != null)
	{
	  listNode2.add(pmaisparametrosassinaturaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ANonTerminal$MaisParametrosAssinatura */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PMaisParametrosAssinatura pmaisparametrosassinaturaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmaisparametrosassinaturaNode2 = (PMaisParametrosAssinatura)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmaisparametrosassinaturaNode2 != null)
	{
	  listNode3.add(pmaisparametrosassinaturaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ATerminal$ConteudoBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PConteudoBloco pconteudoblocoNode1;
        pconteudoblocoNode1 = (PConteudoBloco)nodeArrayList1.get(0);
	if(pconteudoblocoNode1 != null)
	{
	  listNode2.add(pconteudoblocoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ANonTerminal$ConteudoBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PConteudoBloco pconteudoblocoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pconteudoblocoNode2 = (PConteudoBloco)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pconteudoblocoNode2 != null)
	{
	  listNode3.add(pconteudoblocoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ATerminal$MaisAtributo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PMaisAtributo pmaisatributoNode1;
        pmaisatributoNode1 = (PMaisAtributo)nodeArrayList1.get(0);
	if(pmaisatributoNode1 != null)
	{
	  listNode2.add(pmaisatributoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ANonTerminal$MaisAtributo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PMaisAtributo pmaisatributoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmaisatributoNode2 = (PMaisAtributo)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmaisatributoNode2 != null)
	{
	  listNode3.add(pmaisatributoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, },
			{{-1, ERROR, 1}, {37, SHIFT, 7}, },
			{{-1, ERROR, 2}, {39, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {0, SHIFT, 8}, },
			{{-1, ERROR, 4}, {34, SHIFT, 10}, {35, SHIFT, 11}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 0}, {0, SHIFT, 8}, },
			{{-1, ERROR, 7}, {1, SHIFT, 15}, {5, SHIFT, 16}, },
			{{-1, ERROR, 8}, {37, SHIFT, 17}, },
			{{-1, REDUCE, 1}, {0, SHIFT, 8}, },
			{{-1, ERROR, 10}, {0, SHIFT, 18}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 13}, {34, SHIFT, 10}, {35, SHIFT, 20}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 15}, {3, SHIFT, 22}, },
			{{-1, REDUCE, 9}, {7, SHIFT, 23}, {9, SHIFT, 24}, },
			{{-1, ERROR, 17}, {5, SHIFT, 16}, },
			{{-1, ERROR, 18}, {37, SHIFT, 30}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 22}, {4, SHIFT, 31}, },
			{{-1, ERROR, 23}, {32, SHIFT, 32}, },
			{{-1, ERROR, 24}, {32, SHIFT, 33}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 11}, {8, SHIFT, 34}, {27, SHIFT, 35}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 10}, {7, SHIFT, 23}, {9, SHIFT, 24}, },
			{{-1, ERROR, 30}, {1, SHIFT, 15}, },
			{{-1, ERROR, 31}, {37, SHIFT, 40}, },
			{{-1, ERROR, 32}, {11, SHIFT, 41}, {12, SHIFT, 42}, {13, SHIFT, 43}, },
			{{-1, ERROR, 33}, {37, SHIFT, 45}, },
			{{-1, ERROR, 34}, {32, SHIFT, 47}, },
			{{-1, ERROR, 35}, {8, SHIFT, 48}, },
			{{-1, ERROR, 36}, {6, SHIFT, 49}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 12}, {8, SHIFT, 34}, {27, SHIFT, 35}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 44}, {38, SHIFT, 51}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 46}, {38, SHIFT, 52}, },
			{{-1, ERROR, 47}, {11, SHIFT, 41}, {12, SHIFT, 42}, {13, SHIFT, 43}, {37, SHIFT, 45}, },
			{{-1, ERROR, 48}, {32, SHIFT, 56}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 51}, {34, SHIFT, 57}, },
			{{-1, ERROR, 52}, {34, SHIFT, 58}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 55}, {38, SHIFT, 59}, },
			{{-1, ERROR, 56}, {11, SHIFT, 41}, {12, SHIFT, 42}, {13, SHIFT, 43}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 59}, {30, SHIFT, 61}, },
			{{-1, ERROR, 60}, {38, SHIFT, 62}, },
			{{-1, REDUCE, 26}, {11, SHIFT, 41}, {12, SHIFT, 42}, {13, SHIFT, 43}, {36, SHIFT, 63}, {37, SHIFT, 45}, },
			{{-1, ERROR, 62}, {30, SHIFT, 70}, },
			{{-1, ERROR, 63}, {11, SHIFT, 41}, {12, SHIFT, 42}, {13, SHIFT, 43}, {37, SHIFT, 45}, },
			{{-1, ERROR, 64}, {38, SHIFT, 72}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 66}, {31, SHIFT, 73}, },
			{{-1, REDUCE, 27}, {36, SHIFT, 63}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 28}, {36, SHIFT, 63}, },
			{{-1, REDUCE, 26}, {11, SHIFT, 41}, {12, SHIFT, 42}, {13, SHIFT, 43}, {36, SHIFT, 63}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 30}, {30, SHIFT, 77}, },
			{{-1, ERROR, 73}, {28, SHIFT, 78}, {34, SHIFT, 79}, },
			{{-1, REDUCE, 29}, {36, SHIFT, 63}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 76}, {31, SHIFT, 81}, },
			{{-1, REDUCE, 34}, {11, SHIFT, 41}, {12, SHIFT, 42}, {13, SHIFT, 43}, {36, SHIFT, 82}, {37, SHIFT, 45}, },
			{{-1, ERROR, 78}, {7, SHIFT, 23}, {9, SHIFT, 24}, {16, SHIFT, 89}, {30, SHIFT, 90}, {38, SHIFT, 91}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 21}, },
			{{-1, ERROR, 81}, {28, SHIFT, 78}, {34, SHIFT, 102}, },
			{{-1, ERROR, 82}, {11, SHIFT, 41}, {12, SHIFT, 42}, {13, SHIFT, 43}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 38}, {38, SHIFT, 105}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 86}, {31, SHIFT, 106}, },
			{{-1, REDUCE, 35}, {36, SHIFT, 82}, },
			{{-1, REDUCE, 36}, {36, SHIFT, 82}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 90}, {16, SHIFT, 89}, {30, SHIFT, 90}, },
			{{-1, REDUCE, 45}, {35, SHIFT, 110}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 95}, {22, SHIFT, 113}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 46}, },
			{{-1, ERROR, 98}, {17, SHIFT, 114}, {18, SHIFT, 115}, {29, SHIFT, 116}, },
			{{-1, REDUCE, 50}, {19, SHIFT, 117}, {20, SHIFT, 118}, {21, SHIFT, 119}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 101}, {7, SHIFT, 23}, {9, SHIFT, 24}, {16, SHIFT, 89}, {30, SHIFT, 90}, {38, SHIFT, 91}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 105}, {30, SHIFT, 77}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 37}, {36, SHIFT, 82}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 109}, {17, SHIFT, 114}, {18, SHIFT, 115}, {31, SHIFT, 122}, },
			{{-1, ERROR, 110}, {38, SHIFT, 123}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 49}, {35, SHIFT, 110}, },
			{{-1, ERROR, 113}, {16, SHIFT, 89}, {30, SHIFT, 90}, },
			{{-1, ERROR, 114}, {16, SHIFT, 89}, {30, SHIFT, 90}, },
			{{-1, ERROR, 115}, {16, SHIFT, 89}, {30, SHIFT, 90}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 117}, {16, SHIFT, 89}, {30, SHIFT, 90}, },
			{{-1, ERROR, 118}, {16, SHIFT, 89}, {30, SHIFT, 90}, },
			{{-1, ERROR, 119}, {16, SHIFT, 89}, {30, SHIFT, 90}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 121}, {17, SHIFT, 114}, {18, SHIFT, 115}, {29, SHIFT, 131}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 125}, {17, SHIFT, 114}, {18, SHIFT, 115}, {34, SHIFT, 132}, },
			{{-1, REDUCE, 51}, {19, SHIFT, 117}, {20, SHIFT, 118}, {21, SHIFT, 119}, },
			{{-1, REDUCE, 52}, {19, SHIFT, 117}, {20, SHIFT, 118}, {21, SHIFT, 119}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 47}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 12}, {13, 21}, },
			{{-1, 3}, },
			{{-1, 4}, {10, 19}, },
			{{-1, 5}, {6, 14}, {9, 14}, },
			{{-1, 25}, {29, 39}, },
			{{-1, 26}, },
			{{-1, 36}, },
			{{-1, 27}, {78, 92}, {101, 92}, },
			{{-1, 28}, {78, 93}, {101, 93}, },
			{{-1, 53}, {32, 44}, },
			{{-1, 54}, {33, 46}, },
			{{-1, 64}, {47, 55}, {56, 60}, {77, 83}, {82, 83}, },
			{{-1, 37}, {38, 50}, },
			{{-1, 65}, {69, 75}, {74, 75}, },
			{{-1, 66}, {70, 76}, },
			{{-1, 67}, {63, 71}, },
			{{-1, 68}, {77, 84}, {82, 84}, },
			{{-1, 85}, {88, 108}, {107, 108}, },
			{{-1, 86}, },
			{{-1, 87}, {82, 104}, },
			{{-1, 94}, {101, 120}, },
			{{-1, 80}, {81, 103}, },
			{{-1, 95}, },
			{{-1, 96}, },
			{{-1, 111}, {112, 124}, },
			{{-1, 97}, },
			{{-1, 98}, {90, 109}, {101, 121}, {113, 125}, },
			{{-1, 99}, {114, 126}, {115, 127}, },
			{{-1, 100}, {117, 128}, {118, 129}, {119, 130}, },
			{{-1, 6}, {3, 9}, },
			{{-1, 13}, },
			{{-1, 29}, },
			{{-1, 38}, },
			{{-1, 69}, {67, 74}, },
			{{-1, 88}, {87, 107}, },
			{{-1, 101}, },
			{{-1, 112}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'molde'",
			"expecting: id molde",
			"expecting: EOF",
			"expecting: ';', '.'",
			"expecting: 'molde', EOF",
			"expecting: 'se', 'contem'",
			"expecting: 'passa'",
			"expecting: 'fim', 'constante', 'funcao', 'objeto', '>>'",
			"expecting: 'contem'",
			"expecting: 'por'",
			"expecting: ':'",
			"expecting: 'fim', 'funcao', '>>'",
			"expecting: 'se'",
			"expecting: 'Bool', 'Numero', 'Texto'",
			"expecting: 'funcao'",
			"expecting: 'fim'",
			"expecting: ')', '|', id",
			"expecting: id",
			"expecting: 'Bool', 'Numero', 'Texto', id molde",
			"expecting: ';'",
			"expecting: 'fim', 'constante', 'funcao', 'objeto', numeros, '>>', '(', id",
			"expecting: '('",
			"expecting: 'Bool', 'Numero', 'Texto', ')', '|', id molde",
			"expecting: ')', '|'",
			"expecting: ')'",
			"expecting: '(', ')', '|'",
			"expecting: '[', ';'",
			"expecting: 'constante', 'objeto', numeros, '(', id",
			"expecting: '+', '-', '*', '/', '%', ']', ')', ';'",
			"expecting: numeros, '('",
			"expecting: '=', '.'",
			"expecting: '='",
			"expecting: '+', '-', ']'",
			"expecting: '+', '-', ')'",
			"expecting: '+', '-', ';'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 0, 3, 4, 4, 5, 1, 4, 0, 0, 3, 3, 4, 6, 7, 8, 1, 3, 0, 3, 9, 10, 10, 7, 11, 7, 7, 7, 12, 1, 13, 1, 10, 14, 15, 11, 11, 7, 3, 16, 16, 16, 17, 16, 17, 18, 10, 4, 11, 19, 19, 16, 16, 17, 18, 20, 20, 21, 17, 22, 21, 18, 17, 23, 24, 23, 23, 23, 22, 23, 25, 26, 23, 23, 24, 22, 27, 11, 11, 26, 18, 16, 23, 23, 24, 23, 23, 28, 29, 30, 27, 27, 27, 31, 27, 31, 32, 28, 28, 27, 11, 11, 23, 21, 23, 23, 23, 33, 17, 30, 30, 29, 29, 29, 11, 29, 29, 29, 27, 32, 28, 30, 30, 34, 28, 28, 28, 28, 28, 11, 27, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}

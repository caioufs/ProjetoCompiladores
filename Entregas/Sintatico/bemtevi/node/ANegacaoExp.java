/* This file was generated by SableCC (http://www.sablecc.org/). */

package bemtevi.node;

import bemtevi.analysis.*;

@SuppressWarnings("nls")
public final class ANegacaoExp extends PExp
{
    private TNegacao _negacao_;
    private PExpBool _expBool_;

    public ANegacaoExp()
    {
        // Constructor
    }

    public ANegacaoExp(
        @SuppressWarnings("hiding") TNegacao _negacao_,
        @SuppressWarnings("hiding") PExpBool _expBool_)
    {
        // Constructor
        setNegacao(_negacao_);

        setExpBool(_expBool_);

    }

    @Override
    public Object clone()
    {
        return new ANegacaoExp(
            cloneNode(this._negacao_),
            cloneNode(this._expBool_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANegacaoExp(this);
    }

    public TNegacao getNegacao()
    {
        return this._negacao_;
    }

    public void setNegacao(TNegacao node)
    {
        if(this._negacao_ != null)
        {
            this._negacao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._negacao_ = node;
    }

    public PExpBool getExpBool()
    {
        return this._expBool_;
    }

    public void setExpBool(PExpBool node)
    {
        if(this._expBool_ != null)
        {
            this._expBool_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expBool_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._negacao_)
            + toString(this._expBool_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._negacao_ == child)
        {
            this._negacao_ = null;
            return;
        }

        if(this._expBool_ == child)
        {
            this._expBool_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._negacao_ == oldChild)
        {
            setNegacao((TNegacao) newChild);
            return;
        }

        if(this._expBool_ == oldChild)
        {
            setExpBool((PExpBool) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

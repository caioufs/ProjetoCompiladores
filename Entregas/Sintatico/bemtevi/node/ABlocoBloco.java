/* This file was generated by SableCC (http://www.sablecc.org/). */

package bemtevi.node;

import java.util.*;
import bemtevi.analysis.*;

@SuppressWarnings("nls")
public final class ABlocoBloco extends PBloco
{
    private TAbreBloco _abreBloco_;
    private final LinkedList<PConteudoBloco> _conteudoBloco_ = new LinkedList<PConteudoBloco>();
    private PExp _exp_;
    private TPontoVirgula _pontoVirgula_;
    private TFechaBloco _fechaBloco_;

    public ABlocoBloco()
    {
        // Constructor
    }

    public ABlocoBloco(
        @SuppressWarnings("hiding") TAbreBloco _abreBloco_,
        @SuppressWarnings("hiding") List<?> _conteudoBloco_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_,
        @SuppressWarnings("hiding") TFechaBloco _fechaBloco_)
    {
        // Constructor
        setAbreBloco(_abreBloco_);

        setConteudoBloco(_conteudoBloco_);

        setExp(_exp_);

        setPontoVirgula(_pontoVirgula_);

        setFechaBloco(_fechaBloco_);

    }

    @Override
    public Object clone()
    {
        return new ABlocoBloco(
            cloneNode(this._abreBloco_),
            cloneList(this._conteudoBloco_),
            cloneNode(this._exp_),
            cloneNode(this._pontoVirgula_),
            cloneNode(this._fechaBloco_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABlocoBloco(this);
    }

    public TAbreBloco getAbreBloco()
    {
        return this._abreBloco_;
    }

    public void setAbreBloco(TAbreBloco node)
    {
        if(this._abreBloco_ != null)
        {
            this._abreBloco_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreBloco_ = node;
    }

    public LinkedList<PConteudoBloco> getConteudoBloco()
    {
        return this._conteudoBloco_;
    }

    public void setConteudoBloco(List<?> list)
    {
        for(PConteudoBloco e : this._conteudoBloco_)
        {
            e.parent(null);
        }
        this._conteudoBloco_.clear();

        for(Object obj_e : list)
        {
            PConteudoBloco e = (PConteudoBloco) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._conteudoBloco_.add(e);
        }
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    public TFechaBloco getFechaBloco()
    {
        return this._fechaBloco_;
    }

    public void setFechaBloco(TFechaBloco node)
    {
        if(this._fechaBloco_ != null)
        {
            this._fechaBloco_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaBloco_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._abreBloco_)
            + toString(this._conteudoBloco_)
            + toString(this._exp_)
            + toString(this._pontoVirgula_)
            + toString(this._fechaBloco_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._abreBloco_ == child)
        {
            this._abreBloco_ = null;
            return;
        }

        if(this._conteudoBloco_.remove(child))
        {
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        if(this._fechaBloco_ == child)
        {
            this._fechaBloco_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._abreBloco_ == oldChild)
        {
            setAbreBloco((TAbreBloco) newChild);
            return;
        }

        for(ListIterator<PConteudoBloco> i = this._conteudoBloco_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PConteudoBloco) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        if(this._fechaBloco_ == oldChild)
        {
            setFechaBloco((TFechaBloco) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

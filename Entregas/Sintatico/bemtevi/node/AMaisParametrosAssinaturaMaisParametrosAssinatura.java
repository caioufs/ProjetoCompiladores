/* This file was generated by SableCC (http://www.sablecc.org/). */

package bemtevi.node;

import bemtevi.analysis.*;

@SuppressWarnings("nls")
public final class AMaisParametrosAssinaturaMaisParametrosAssinatura extends PMaisParametrosAssinatura
{
    private TPipe _pipe_;
    private PParametroAssinatura _parametroAssinatura_;

    public AMaisParametrosAssinaturaMaisParametrosAssinatura()
    {
        // Constructor
    }

    public AMaisParametrosAssinaturaMaisParametrosAssinatura(
        @SuppressWarnings("hiding") TPipe _pipe_,
        @SuppressWarnings("hiding") PParametroAssinatura _parametroAssinatura_)
    {
        // Constructor
        setPipe(_pipe_);

        setParametroAssinatura(_parametroAssinatura_);

    }

    @Override
    public Object clone()
    {
        return new AMaisParametrosAssinaturaMaisParametrosAssinatura(
            cloneNode(this._pipe_),
            cloneNode(this._parametroAssinatura_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMaisParametrosAssinaturaMaisParametrosAssinatura(this);
    }

    public TPipe getPipe()
    {
        return this._pipe_;
    }

    public void setPipe(TPipe node)
    {
        if(this._pipe_ != null)
        {
            this._pipe_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pipe_ = node;
    }

    public PParametroAssinatura getParametroAssinatura()
    {
        return this._parametroAssinatura_;
    }

    public void setParametroAssinatura(PParametroAssinatura node)
    {
        if(this._parametroAssinatura_ != null)
        {
            this._parametroAssinatura_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parametroAssinatura_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pipe_)
            + toString(this._parametroAssinatura_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pipe_ == child)
        {
            this._pipe_ = null;
            return;
        }

        if(this._parametroAssinatura_ == child)
        {
            this._parametroAssinatura_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pipe_ == oldChild)
        {
            setPipe((TPipe) newChild);
            return;
        }

        if(this._parametroAssinatura_ == oldChild)
        {
            setParametroAssinatura((PParametroAssinatura) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}

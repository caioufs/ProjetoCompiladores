/* This file was generated by SableCC (http://www.sablecc.org/). */

package bemtevi.node;

import java.util.*;
import bemtevi.analysis.*;

@SuppressWarnings("nls")
public final class AListaInicializacaoListaInicializacao extends PListaInicializacao
{
    private PInicializacaoObjeto _inicializacaoObjeto_;
    private final LinkedList<PMaisInicializacaoObjeto> _maisInicializacaoObjeto_ = new LinkedList<PMaisInicializacaoObjeto>();

    public AListaInicializacaoListaInicializacao()
    {
        // Constructor
    }

    public AListaInicializacaoListaInicializacao(
        @SuppressWarnings("hiding") PInicializacaoObjeto _inicializacaoObjeto_,
        @SuppressWarnings("hiding") List<?> _maisInicializacaoObjeto_)
    {
        // Constructor
        setInicializacaoObjeto(_inicializacaoObjeto_);

        setMaisInicializacaoObjeto(_maisInicializacaoObjeto_);

    }

    @Override
    public Object clone()
    {
        return new AListaInicializacaoListaInicializacao(
            cloneNode(this._inicializacaoObjeto_),
            cloneList(this._maisInicializacaoObjeto_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListaInicializacaoListaInicializacao(this);
    }

    public PInicializacaoObjeto getInicializacaoObjeto()
    {
        return this._inicializacaoObjeto_;
    }

    public void setInicializacaoObjeto(PInicializacaoObjeto node)
    {
        if(this._inicializacaoObjeto_ != null)
        {
            this._inicializacaoObjeto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inicializacaoObjeto_ = node;
    }

    public LinkedList<PMaisInicializacaoObjeto> getMaisInicializacaoObjeto()
    {
        return this._maisInicializacaoObjeto_;
    }

    public void setMaisInicializacaoObjeto(List<?> list)
    {
        for(PMaisInicializacaoObjeto e : this._maisInicializacaoObjeto_)
        {
            e.parent(null);
        }
        this._maisInicializacaoObjeto_.clear();

        for(Object obj_e : list)
        {
            PMaisInicializacaoObjeto e = (PMaisInicializacaoObjeto) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._maisInicializacaoObjeto_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._inicializacaoObjeto_)
            + toString(this._maisInicializacaoObjeto_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._inicializacaoObjeto_ == child)
        {
            this._inicializacaoObjeto_ = null;
            return;
        }

        if(this._maisInicializacaoObjeto_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._inicializacaoObjeto_ == oldChild)
        {
            setInicializacaoObjeto((PInicializacaoObjeto) newChild);
            return;
        }

        for(ListIterator<PMaisInicializacaoObjeto> i = this._maisInicializacaoObjeto_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PMaisInicializacaoObjeto) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}

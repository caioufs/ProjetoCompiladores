/* This file was generated by SableCC (http://www.sablecc.org/). */

package bemtevi.node;

import java.util.*;
import bemtevi.analysis.*;

@SuppressWarnings("nls")
public final class AFamiliaFamilia extends PFamilia
{
    private PRelacao _relacao_;
    private final LinkedList<PFamiliaOpcional> _familiaOpcional_ = new LinkedList<PFamiliaOpcional>();
    private TPonto _ponto_;

    public AFamiliaFamilia()
    {
        // Constructor
    }

    public AFamiliaFamilia(
        @SuppressWarnings("hiding") PRelacao _relacao_,
        @SuppressWarnings("hiding") List<?> _familiaOpcional_,
        @SuppressWarnings("hiding") TPonto _ponto_)
    {
        // Constructor
        setRelacao(_relacao_);

        setFamiliaOpcional(_familiaOpcional_);

        setPonto(_ponto_);

    }

    @Override
    public Object clone()
    {
        return new AFamiliaFamilia(
            cloneNode(this._relacao_),
            cloneList(this._familiaOpcional_),
            cloneNode(this._ponto_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFamiliaFamilia(this);
    }

    public PRelacao getRelacao()
    {
        return this._relacao_;
    }

    public void setRelacao(PRelacao node)
    {
        if(this._relacao_ != null)
        {
            this._relacao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relacao_ = node;
    }

    public LinkedList<PFamiliaOpcional> getFamiliaOpcional()
    {
        return this._familiaOpcional_;
    }

    public void setFamiliaOpcional(List<?> list)
    {
        for(PFamiliaOpcional e : this._familiaOpcional_)
        {
            e.parent(null);
        }
        this._familiaOpcional_.clear();

        for(Object obj_e : list)
        {
            PFamiliaOpcional e = (PFamiliaOpcional) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._familiaOpcional_.add(e);
        }
    }

    public TPonto getPonto()
    {
        return this._ponto_;
    }

    public void setPonto(TPonto node)
    {
        if(this._ponto_ != null)
        {
            this._ponto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ponto_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._relacao_)
            + toString(this._familiaOpcional_)
            + toString(this._ponto_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._relacao_ == child)
        {
            this._relacao_ = null;
            return;
        }

        if(this._familiaOpcional_.remove(child))
        {
            return;
        }

        if(this._ponto_ == child)
        {
            this._ponto_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._relacao_ == oldChild)
        {
            setRelacao((PRelacao) newChild);
            return;
        }

        for(ListIterator<PFamiliaOpcional> i = this._familiaOpcional_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PFamiliaOpcional) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._ponto_ == oldChild)
        {
            setPonto((TPonto) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
